<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--配置dbcp连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://localhost/spring_source_code_leaning?useUnicode=true&amp;characterEncoding=UTF8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
        <!--连接池的初始大小-->
        <property name="initialSize" value="1"/>
        <!--连接池最大值-->
        <property name="maxActive" value="300"/>
        <!--最大空闲连接数-->
        <property name="maxIdle" value="2"/>
        <!--最小空闲连接数-->
        <property name="minIdle" value="1"/>

        <property name="defaultAutoCommit" value="true"/>
    </bean>

    <!--配置创建sqlsessionFactory的factoryBean，交给spring管理，需要提供mybatis主配置文件地址和DataSource-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:chapter9/configuration/mybatis_spring.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--<bean id="commodityMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--<property name="mapperInterface" value="chapter9.mapper.CommodityMapper"/>-->
    <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="chapter9.mapper"/>
    </bean>

    <!--service-->
    <bean id="userService" class="chapter9.service.impl.UserServiceImpl">
        <property name="mapper" ref="userMapper"/>
    </bean>

    <bean id="commodityService" class="chapter9.service.impl.CommodityServiceImpl">
        <property name="mapper" ref="commodityMapper"/>
        <property name="userMapper" ref="userMapper"/>
    </bean>

    <!--开启事务扫描-->
    <!--mode配置aop代理类的实现方式，默认是Java proxy，配置为aspectj时mode="aspectj"需要依赖spring-aspects模块-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>